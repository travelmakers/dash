{
  "Travelmakers Design System Component": {
    "prefix": "tdsc",
    "body": [
      "import {",
      "\tClassNames,",
      "\tPolymorphicComponentProps,",
      "\tPolymorphicRef,",
      "\tTmComponentProps,",
      "} from \"@travelmakers-design-v2/styles\";",
      "import { forwardRef, PropsWithChildren } from \"react\";",
      "import { View } from \"../View\";",
      "import useStyles from \"./${TM_FILENAME_BASE}.style\";",
      "",
      "export type ${TM_FILENAME_BASE}StylesNames = ClassNames<typeof useStyles>;",
      "",
      "export interface Props {",
      "\t// Ïª¥Ìè¨ÎÑåÌä∏ ÎÇ¥ÏóêÏÑú ÏÇ¨Ïö©Ìï† props ÌÉÄÏûÖ Ï†ïÏùò",
      "}",
      "export interface Shared${TM_FILENAME_BASE}Props extends Props,TmComponentProps<${TM_FILENAME_BASE}StylesNames> {}",
      "",
      "export type ${TM_FILENAME_BASE}Props<C extends React.ElementType> =",
      "\tPolymorphicComponentProps<C, Shared${TM_FILENAME_BASE}Props>;",
      "",
      "type ${TM_FILENAME_BASE}Component = <C extends React.ElementType = \"div\">(",
      "\tprops: ${TM_FILENAME_BASE}Props<C>",
      ") => React.ReactElement;",
      "",
      "export const ${TM_FILENAME_BASE}: ${TM_FILENAME_BASE}Component & {",
      "\tdisplayName?: string;",
      "} = forwardRef(",
      "\t<C extends React.ElementType = \"div\">(",
      "\t\t{ className, children, ...props }: PropsWithChildren<${TM_FILENAME_BASE}Props<C>>,",
      "\t\tref: PolymorphicRef<C>",
      "\t) => {",
      "\t\tconst { classes, cx } = useStyles();",
      "",
      "\t\treturn (",
      "\t\t\t<View<React.ElementType>",
      "\t\t\t\tcomponent={\"div\"}",
      "\t\t\t\tref={ref}",
      "\t\t\t\tclassName={cx(className)}",
      "\t\t\t\t{...props}",
      "\t\t\t>",
      "\t\t\t\t{children}",
      "\t\t\t</View>",
      "\t\t);",
      "\t}",
      ");",
      "",
      "${TM_FILENAME_BASE}.displayName = \"${TM_FILENAME_BASE}\";"
    ],
    "description": "Travelmakers Design System Component üß±"
  }
}
